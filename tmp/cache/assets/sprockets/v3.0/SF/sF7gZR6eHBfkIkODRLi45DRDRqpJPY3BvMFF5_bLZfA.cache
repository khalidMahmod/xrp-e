I"«(function() {
  app.controller('FundSourcesController', [
    '$scope', '$gon', 'fundSourceService', function($scope, $gon, fundSourceService) {
      var currency;
      $scope.banks = $gon.banks;
      $scope.currency = currency = $scope.ngDialogData.currency;
      $scope.fund_sources = function() {
        return fundSourceService.filterBy({
          currency: currency
        });
      };
      $scope.defaultFundSource = function() {
        return fundSourceService.defaultFundSource({
          currency: currency
        });
      };
      $scope.add = function() {
        var data, extra, regex, uid;
        if (angular.isString($scope.uid)) {
          uid = $scope.uid.trim();
        }
        if (angular.isString($scope.extra)) {
          extra = $scope.extra.trim();
        }
        if (!uid) {
          return;
        }
        if (!extra) {
          return;
        }
        regex = /^[a-zA-Z0-9]+$/;
        if (regex.test(extra)) {
          $('.label_errors').css("display", "none");
        } else {
          $('.label_errors').css("display", "block");
        }
        if (regex.test(uid) && (($scope.currency === "xlm" && uid.length === 56) || (uid.length === 34 && $scope.currency !== "xlm"))) {
          data = {
            uid: uid,
            extra: extra,
            currency: currency
          };
          return fundSourceService.create(data, function() {
            $scope.uid = "";
            if (currency !== $gon.fiat_currency) {
              $scope.extra = "";
            }
            return $('.address_errors').css("display", "none");
          });
        } else {
          $('.address_errors').css("display", "block");
        }
      };
      $scope.remove = function(fund_source) {
        return fundSourceService.remove(fund_source);
      };
      return $scope.makeDefault = function(fund_source) {
        return fundSourceService.update(fund_source);
      };
    }
  ]);

}).call(this);
:ET